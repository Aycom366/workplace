<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="notifyIcon1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="notifyIcon1.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        /xb///+G9/f/4dnX/v/Dwf7/uLb+/7i2/v/Dwf7/2df+//j3///////h////hv///xYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//
        /wj9/f9+0M/+8pST/v9tav7/a2j+/2to/v9nZ/j/Y2fx/2do9/9oZ/r/Z2nz/46Q9//Pz/z//v7/8v//
        /33///8IAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD///8a19X+yoyM/v9qaf7/amn+/2pp/v9qaf7/ZWf2/2Fn7v9lZ/X/Z2j4/2Fm7/9jaPH/Y2fy/19m
        6f+Ch/D/3d39/////8n///8aAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA////Jrq6/+RrbP7/aWr+/2lq/v9pav7/aWr+/2Jo8/9bZ+j/Ymjz/2Rp9v9daOv/Xmfs/19n
        7P9YZuH/W2bn/2Jn9P9oa/j/vr/8/////+T///8mAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP///xCdof7ZaGv+/2hr/v9oa/7/aGv+/3Vr/v+xX5T/gWGH/19o7v+sYrL/imB//1pn
        5v+hYa//nF1t/1Znz/9gafD/Y2r0/2Nq9f9kaff/qKz7/////9j///8QAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAp6r+t2ds/v9nbP7/Z2z+/2ds/v9nbP7/gmz+//9VM/+wXDD/Zmz8//Jb
        bf+7WRn/WGjk/+Rbcv/lVQD/XWrK/2Fr8/9ha/P/Ymv0/2Nr9f9jafb/vcD8/////7AAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJqg/FNpb/7/Zm3+/2Zt/v9mbf7/Zm3+/2Zt/v9mbf7/c2v1/21s
        9P9mbf7/bGrn/15nz/9WaN//Ymnf/2Rp2/9fbPD/X2vw/2Bs8v9fbPL/X2zy/2Js9f9lbff/3N79////
        /0MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAd4D93mVu/v9lbv7/ZW7+/2Vu/v9lbv7/ZW7+/2Vu
        /v9lbv7/ZW7+/1xr7P9SaNn/UGbX/1Vo4P9XauX/W2rq/1xr7P9dbO//Xmzv/15s7/9ebfH/YG30/2Fs
        9f+FjPn//v7/zAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH6G/F1kb/7/ZG/+/2Rv/v9kb/7/ZG/+/2Rv
        /v9kb/7/ZG/+/2Rv/v9oat7/oGCT/6VdZ/+nXmv/jWF7/11p0f9Xa+T/WWzp/1lq6f9bbOv/XGzt/11t
        8f9ebvL/X230/2Bs9v/N0fv/////NgAAAAAAAAAAAAAAAAAAAAAAAAAAZnL7vGNw/v9jcP7/Y3D+/2Nw
        /v9jcP7/Y3D+/2Nw/v9qcP7/vWGY//9VFf//VQD//1UA//9VAP//VQD/8VUA/5dgZf9Uatj/VWnj/1hr
        6P9abez/XG7v/11u8v9dbfP/X230/4qT9v////96AAAAAAAAAAAAAAAAAAAAAE5i2A1kcv78Y3H+/2Nx
        /v9jcf7/Y3H+/2Nx/v9jcf7/anH+/99dgv//VQD/x1sp/39np/9lbur/Z27u/5Znyv/lW1f//1UA/6pc
        L/9Tatb/Vmvm/1hs6f9bbu7/XG7w/1xu8P9dbfL/Y3P4/+/v/X8AAAAAAAAAAAAAAAAAAAAAWmnpRGJz
        /v9ic/7/YnP+/2Jz/v9ic/7/YnP+/2Jz/v++ZsL//1UA/5teRP9ZbuL/XHDx/11w8/9ecPb/XnD4/2Ru
        8f/PX5D//1UA/35hY/9Ta+L/V2zo/1pu7P9Zbu3/Wm7u/15w9f9hc/z/p7H1fwAAAAAAAAAAAAAAAAAA
        AABeb/pnYXT+/2F0/v9hdP7/YXT+/2F0/v9hdP7/bnT+//9XRv/FWBX/VW3V/1pv7v9bcPH/W3Hz/1xx
        9P9Ybu3/WG3o/2du7f/yWVT/1VYA/1Jrz/9UbOT/Vm7n/1du6P9bb/D/YHP8/2F0/v98i/l/AAAAAAAA
        AAAAAAAAAAAAAF90/Xlgdf7/YHX+/2B1/v9gdf7/YHX+/2B1/v+cbvT//1UA/39iX/9Vbuj/WXHu/1tx
        8v9acfH/VG7l/1Js4P9Wbef/WXDv/7tlvP//VQD/WGaR/1Js4P9SbuL/WHDs/150+/9gdf7/YHX+/2Z6
        /X8AAAAAAAAAAAAAAAAAAAAAW3T5eV92/v9fdv7/X3b+/192/v9fdv7/X3b+/65r2f//VQD/YmeK/1Vv
        6P9Zce//WnLx//FcaP+3Whj/UW3f/1dw6v9Yce//nmvg//9VAP9uY2v/UGzb/1Vw6P9ddfr/X3b+/192
        /v9fdv7/ZHj3fwAAAAAAAAAAAAAAAAAAAABVbelpXnf+/153/v9ed/7/Xnf+/153/v9ed/7/qG3i//9V
        AP9pZ33/VXDo/1dy7f9Zc/H/8V1o/7dbGf9RbuP/VnHq/1dy7/+latj//1UA/2Rjd/9TbuT/XHX5/153
        /v9ed/7/Xnf+/153/v90h+1/AAAAAAAAAAAAAAAAAAAAAEtl1EddeP7/XXj+/114/v9deP7/XXj+/114
        /v+Nc/7//1UO/5NhR/9ScOb/VXLs/1d07//xXGf/t1sZ/1Fv5P9Vcur/V3Pv/89jmv/3VQD/T2qk/1p2
        +P9deP7/XXj+/114/v9deP7/XXj+/5qp6HwAAAAAAAAAAAAAAAAAAAAASVvIDll19/pcef7/XHn+/1x5
        /v9cef7/XHn+/2N5/v/yXGP/6lYA/1ltr/9Tcun/VXTu//Jea/+3Wxn/UXDk/1Rz6v+BcOT//1Yf/7Zb
        Fv9Zd/f/XHn+/1x5/v9cef7/XHn+/1x5/v9cePb/1dnyPAAAAAAAAAAAAAAAAAAAAAAAAAAAVXHsvFt6
        /v9bev7/W3r+/1t6/v9bev7/W3r+/4t06///ViP/21kW/2Jus/9aefz/8l5t/7dbGf9RceT/gG/a//hY
        Mf/qVgD/aHO1/1t6/v9bev7/W3r+/1t6/v9bev7/W3r+/26I794AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABIZdNRWXn6/1p7/v9ae/7/Wnv+/1p7/v9ae/7/Wnv+/5lz2P/IXj3/WXfX/1p7/v/xXm3/t1sZ/1Bx
        5f9zdPP/3l5c/3Zzo/9ae/7/Wnv+/1p7/v9ae/7/Wnv+/1p7/v9Zefr/aIDYYgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABRcejHWXz+/1l8/v9ZfP7/WXz+/1l8/v9ZfP7/WXz+/1l8/v9ZfP7/WXz+//Ff
        bf+3XBn/U3bu/1h7/P9ZfP7/WXz+/1l8/v9ZfP7/WXz+/1l8/v9ZfP7/WXz+/1176dQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEZhyjpTd/H7WH3+/1h9/v9Yff7/WH3+/1h9/v9Yff7/WH3+/1h9
        /v9Yff7/5GF7/7NgNf9XfPv/WH3+/1h9/v9Yff7/WH3+/1h9/v9Yff7/WH3+/1h9/v9VePL8UmvOPgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEdm0XBVe/f/V37+/1d+/v9Xfv7/V37+/1d+
        /v9Xfv7/V37+/1d+/v9Xfv7/V37+/1d+/v9Xfv7/V37+/1d+/v9Xfv7/V37+/1d+/v9Xfv7/VXv3/0lp
        0XAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEdq0pNTevT/Vn/+/1Z/
        /v9Wf/7/Vn/+/1Z//v9Wf/7/Vn/+/1Z//v9Wf/7/Vn/+/1Z//v9Wf/7/Vn/+/1Z//v9Wf/7/Vn/+/1N6
        9P9HatKTAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAERm
        y3BPd+v7VoH+/1aB/v9Wgf7/VoH+/1aB/v9Wgf7/VoH+/1aB/v9Wgf7/VoH+/1aB/v9Wgf7/VoH+/1aB
        /v9Pd+v7RGbLcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAEFjwjtHbtbIUHvx/1WC/v9Vgv7/VYL+/1WC/v9Vgv7/VYL+/1WC/v9Vgv7/VYL+/1WC
        /v9Qe/H/R27WyEFjwjsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+ZMRSRm3UvUlz4ftOe+7/UX/3/1OB/P9Tgfz/UX/3/057
        7v9Jc+H7Rm3UvT5kxFIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAN1vIDj9lxEk9Y8JsPWTAej1k
        wHo9Y8JsP2XESTdbyA4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////wAH//wAAf/4AAD/8AAAf+AAAD/gAAA/wAAAH8AAAB+AA
        AAPgAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPgAAAH4AAAB/AAAA/wAAAP+AAAH/wA
        AD/+AAB//wAA///AA///8A////////////8=
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>121, 17</value>
  </metadata>
</root>